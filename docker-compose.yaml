version: '3.8'
services:
  neo4j:
    image: neo4j:latest
    ports:
      - '7888:7474' #http protocol
      - '7999:7687' #bolt protocol
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/password

  postgres-core-service:
    image: postgres:latest
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    ports:
      - '5432:5432'

  postgres-analyse-service:
    image: postgres:latest
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    ports:
      - '5433:5432'

  postgres-graph-service:
    image: postgres:latest
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    ports:
      - '5434:5432'

  zookeeper:
    image: zookeeper:3.5.8
    ports:
      - "2181:2181"

  kafka-update:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-update:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "UPDATE_REQUESTS:1:1,UPDATE_RESPONSES:1:1"  # Topic:Partition:Replica
    depends_on:
      - zookeeper

  kafka-analyse:
    image: wurstmeister/kafka
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-analyse:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "ANALYSE_REQUESTS:1:1,ANALYSE_RESPONSES:1:1"  # Topic:Partition:Replica
    depends_on:
      - zookeeper

  core-service-1:
    build:
      dockerfile: core-service/Dockerfile
    ports:
      - '9000:8080'

  update-service-1:
    build:
      dockerfile: update-service/Dockerfile
    ports:
      - '9100:8080'

  analyse-service-1:
    build:
      dockerfile: analyse-service/Dockerfile
    ports:
      - '9200:8080'

  graph-service-1:
    build:
      dockerfile: graph-service/Dockerfile
    ports:
      - '9300:8080'